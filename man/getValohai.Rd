% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/valohai-api.R
\name{getValohai}
\alias{getValohai}
\title{Get requests for valohai}
\usage{
getValohai(token, uri, query, id, ...)
}
\arguments{
\item{token}{user token}

\item{uri}{the uri to the specific call, see description and examples}

\item{query}{named list of data to be send with the call}

\item{id}{execution, project or otherwise id}

\item{...}{additional arguments passed to httr::GET}
}
\value{
A list or tibble containing the named results.
}
\description{
This functions provides a basic interface to the valohai GET requests API.
The user it expected to provide a secret token, which should be able to read one or more urls. The available urls can be found using getAllUris() (see example).
It is important to note that if the 'uri' has multiple parts, it should be provided as a vector (eg 'executions/{id}/' should be given as c('executions', '{id}')), as the uri will be cleaned before being sent to the valohai API.

The user is expected to provide a secret token, the uri directory and possible data that should be send as query.
}
\examples{
\dontrun{
token <- 'YOUR-TOKEN-HERE'

# Perform calls to some of the available calls:
getValohai(token = token, uri = 'projects', query = list(limit = 10))
#Same: getValohai(token = token, uri = c('billing', 'credit'), id = 1)
getValohai(token = token, uri = c('billing', 1, 'credit'))

getValohai(token = token, uri = 'invoices', query = list(limit = 10, offset = 7, ordering = 'id'))

# List available uris (same as getAllUris(token = token))
sub(".*/(?=[^/]*/$)", "", getValohai(token = token, uri = ""), perl = TRUE)
}

}
